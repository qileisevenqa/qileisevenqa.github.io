(window.webpackJsonp=window.webpackJsonp||[]).push([[171],{384:function(e,n,t){"use strict";t.r(n);var i=t(1),r=Object(i.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("div",{staticClass:"content"},[t("h1",{attrs:{id:"迁移到selenium-4-下面是发生的变化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#迁移到selenium-4-下面是发生的变化","aria-hidden":"true"}},[e._v("#")]),e._v(" 迁移到Selenium 4:下面是发生的变化")]),e._v(" "),t("p",[e._v("对于希望从Selenium 3迁移到Selenium 4的工程师来说，这是一个值得注意的变化和反对意见的指南。\n自从Selenium项目的负责人Simon Stewart在正式的Selenium会议期间宣布对Selenium套件（Selenium IDE，Selenium WebDriver和Selenium Grid）进行重大更改和W3C标准化后，Selenium 4的发布引起了测试界的极大兴奋。 2018年在印度班加罗尔举行。")]),e._v(" "),t("p",[e._v("到2020年9月初，Selenium 4的alpha版本已经发布，可以下载来探索。")]),e._v(" "),t("p",[e._v("Manoj Kumar已经在较高级别上解释了Selenium 4的新增功能，在本周的博客系列中，我们将为最终用户和开发者社区提供代码段，好处和可能的用例，详细讨论这些功能。 在硒之上构建工具/产品。")]),e._v(" "),t("h2",{attrs:{id:"关键的点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#关键的点","aria-hidden":"true"}},[e._v("#")]),e._v(" 关键的点")]),e._v(" "),t("pre",[t("code",[e._v("理解废弃的组件和它们的替代品\n\n计划从Selenium 3到4的迁移\n")])]),e._v(" "),t("p",[e._v("Selenium是一个用于web浏览器自动化的工具集，它允许我们远程控制浏览器实例并模拟用户与浏览器的交互。在Selenium 4中有很多变化，主要是W3C标准化，这意味着Selenium可以与任何软件集成而不存在任何兼容性问题。除了W3C标准化之外，还添加了很少的新方法和废弃/替换的方法。")]),e._v(" "),t("h2",{attrs:{id:"selenium-4中弃用了什么？"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#selenium-4中弃用了什么？","aria-hidden":"true"}},[e._v("#")]),e._v(" Selenium 4中弃用了什么？")]),e._v(" "),t("p",[e._v("Selenium 4中有两个过时的建议。让我们对其进行探讨。")]),e._v(" "),t("p",[e._v("FindsBy")]),e._v(" "),t("p",[e._v("FindsBy接口是org.openqa.selenium.internal程序包的一部分，该程序包具有由RemoteWebDriver类实现的findElement（By）和findElements（By）方法。 这些现在已作为Selenium 4的一部分弃用。")]),e._v(" "),t("p",[e._v("这是内部更改，不会影响最终用户，但是，如果您有基于Selenium API构建的产品或工具，请查看这些更改。")]),e._v(" "),t("p",[e._v("就像之前一样，By类可以与findElement（By）和findElements（By）一起使用。")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('import org.openqa.selenium.By;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.chrome.ChromeDriver;\nimport java.util.List;\n\npublic class FindsByExample {\n\n    final static String PROJECT_PATH = System.getProperty("user.dir");\n\n    public static void main(String[] args) {\n        System.setProperty("webdriver.chrome.driver", PROJECT_PATH+ "/src/main/resources/chromedriver");\n        ChromeDriver driver = new ChromeDriver();\n        driver.get("https://www.google.com");\n\n        // findElement\n        WebElement serachTxtBox = driver.findElement(By.name("q"));\n\n        //findElements\n        List<WebElement> allLinks = driver.findElements(By.tagName("a"));\n    }\n}\n')])])]),t("h2",{attrs:{id:"actions"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#actions","aria-hidden":"true"}},[e._v("#")]),e._v(" Actions")]),e._v(" "),t("p",[e._v("Actions类是一个面向用户的API，用于模拟复杂的用户手势，如悬停、鼠标移动等。在Actions类中添加了一些新方法，以替代包org.openqa.selenium.interactions下的类")]),e._v(" "),t("p",[e._v("click")]),e._v(" "),t("p",[e._v("一个新方法click（WebElement）被添加到Actions类中，它是moveToElement（onElement）.click（）的替代品，用于单击一个元素。")]),e._v(" "),t("p",[e._v("clickAndHold")]),e._v(" "),t("p",[e._v("同样，clickAndHold（WebElement）用于单击元素而不释放它，并且应用作moveToElement（onElement）.clickAndHold（）的替代。")]),e._v(" "),t("p",[e._v("contextClick")]),e._v(" "),t("p",[e._v("contextClick（WebElement）替代了moveToElement（onElement）.contextClick（），该鼠标右键单击一个元素。")]),e._v(" "),t("p",[e._v("doubleClick")]),e._v(" "),t("p",[e._v("doubleClick（WebElement）用于双击元素，并代替moveToElement（element）.doubleClick（）。")]),e._v(" "),t("p",[e._v("release")]),e._v(" "),t("p",[e._v("release（）用于在当前鼠标位置释放按下的鼠标左键。 这是org.openqa.selenium.interactions.ButtonReleaseAction类的较早部分，现在移至Actions类。")]),e._v(" "),t("p",[e._v("下面的示例演示了在Selenium 3第17到33行中讨论的动作方法的使用。可以替换这些方法，如下面的代码片段所示，作为Selenium 4实现的一部分，从第37行到第53行。")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('import org.openqa.selenium.By;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.chrome.ChromeDriver;\nimport org.openqa.selenium.interactions.Actions;\n\n\npublic class DeprecatedExamples {\n\n    final static String PROJECT_PATH = System.getProperty("user.dir");\n\n    public static void main(String[] args) {\n        System.setProperty("webdriver.chrome.driver", PROJECT_PATH+ "/src/main/resources/chromedriver");\n        ChromeDriver driver = new ChromeDriver();\n\n /**********************************************  Selenium 3 usage  *************************************/\n\n        Actions act = new Actions(driver);\n        WebElement toDoList= driver.findElement(By.id("toDoListBtn"));\n\n        // click method - to click on a webElement\n        act.moveToElement(toDoList).click();\n\n        // double click - double click on a webElement\n        act.moveToElement(toDoList).doubleClick();\n\n        // Context click - Right click on a webElement\n        act.moveToElement(toDoList).contextClick();\n\n        //clickAndHold method - click and hold on a webElement without releasing\n        act.moveToElement(toDoList).clickAndHold();\n\n        // release -release the hold on a webElement\n        act.moveToElement(toDoList).release();\n\n /**********************************************  Selenium 4 usage  *************************************/\n        \n        Actions act1 = new Actions(driver);\n        WebElement toDoList1= driver.findElement(By.id("toDoListBtn"));\n\n        // click method - to click on a webElement\n        act1.click(toDoList);\n\n        //clickAndHold method - click and hold on a webElement without releasing\n        act1.clickAndHold(toDoList);\n\n        // Context click - Right click on a webElement\n        act1.contextClick(toDoList);\n\n        // double click - double click on a webElement\n        act1.doubleClick(toDoList);\n\n        // release -release the hold on a webElement\n        act1.release(toDoList);\n\n    }\n}\n')])])]),t("h2",{attrs:{id:"fluentwait"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#fluentwait","aria-hidden":"true"}},[e._v("#")]),e._v(" FluentWait")]),e._v(" "),t("p",[e._v("来自FluentWait类的方法withTimeout()和pollingEvery()已经更改。现在这两个方法都接受一个参数java.time。替换两个参数int和TimeUnit的持续时间。让我们看看它的用法。")]),e._v(" "),t("p",[e._v("在下面的Selenium 3示例中，我们在第6行看到，pollingEvery()方法接受两个参数int和TimeUnit，可以从包java. utir .concurrent.TimeUnit中导入。在第7行，withTimeout()也接受int和TimeUnit作为参数。")]),e._v(" "),t("p",[e._v("Selenium 4用持续时间替换了时间单元，下面是演示它的示例代码片段。在第12行，轮询every()方法现在只接受一个参数Duration。")]),e._v(" "),t("p",[e._v("Duration类可以从java中导入。时间包和方法来表示时间持续时间在纳米，millis，秒，分钟，小时，天等等。")]),e._v(" "),t("p",[e._v("在我们的示例中，我们使用了ofMillis(int)和ofSeconds(int)方法。")]),e._v(" "),t("p",[e._v("类似地，第14行withTimeout()方法接受Duration作为参数。")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("import java.util.concurrent.TimeUnit; // Selenium 3\nimport java.time.Duration; // Selenium 4\n\n// selenium 3 usage\n      FluentWait wait = new FluentWait(driver)\n                            .pollingEvery(20, TimeUnit.MILLISECONDS)\n                            .withTimeout(20, TimeUnit.SECONDS)\n                            .ignoring(NoSuchElementException.class);\n\n//selenium 4 usage\n      FluentWait wait = new FluentWait(driver)\n                            .pollingEvery(Duration.ofMillis(500))\n                            .ignoring(NoSuchElementException.class)\n                            .withTimeout(Duration.ofSeconds(60));\n\n\n")])])]),t("h2",{attrs:{id:"驱动程序构造函数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#驱动程序构造函数","aria-hidden":"true"}},[e._v("#")]),e._v(" 驱动程序构造函数")]),e._v(" "),t("p",[e._v("不推荐使用几个驱动程序构造函数。 即，将接受Capabilities对象的对象替换为接受Option的对象。")]),e._v(" "),t("p",[e._v("这意味着您将需要为正在使用的任何Driver类创建一个特定的Options对象，设置您的要求并将该对象传递给Driver构造函数。")]),e._v(" "),t("p",[e._v("每个驱动程序的示例可以在下面\nChromeDriver\nChromeDriver(Capabilities)被替换为ChromeDriver(ChromeOptions)。")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('import org.openqa.selenium.chrome.ChromeDriver;\nimport org.openqa.selenium.chrome.ChromeOptions;\n\npublic class ChromeDriverExample {\n\n    final static String PROJECT_PATH = System.getProperty("user.dir");\n\n    public static void main(String[] args) throws IOException {\n\n        System.setProperty("webdriver.chrome.driver", PROJECT_PATH+ "/src/main/resources/chromedriver");\n\n        ChromeOptions options = new ChromeOptions();\n        options.setAcceptInsecureCerts(true);\n\n        ChromeDriver driver = new ChromeDriver(options);\n    }\n}\n\n')])])]),t("p",[e._v("SafariDriver(Capabilities) 被替换为 SafariDriver(SafariOptions).")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('import org.openqa.selenium.safari.SafariDriver;\nimport org.openqa.selenium.safari.SafariOptions;\n\npublic class SafariDriverExample {\n\n    public static void main(String[] args) throws IOException {\n\n        SafariOptions safariOptions = new SafariOptions();\n        safariOptions.setAcceptInsecureCerts(true);\n\n        SafariDriver safariDriver = new SafariDriver(safariOptions);\n        safariDriver.get("https://www.google.com");\n\n    }\n}\n')])])]),t("p",[e._v("EgdeDriver(Capabilities) 被替换为 EdgeDriver(EdgeOptions).")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('import org.openqa.selenium.edge.EdgeDriver;\nimport org.openqa.selenium.edge.EdgeOptions;\n\npublic class EdgeDriverExample {\n\n    final static String PROJECT_PATH = System.getProperty("user.dir");\n\n    public static void main(String[] args) throws IOException {\n\n        System.setProperty("webdriver.edge.driver", PROJECT_PATH+ "/src/main/resources/EdgeDriver.exe");\n\n        EdgeOptions edgeOptions = new EdgeOptions();\n        edgeOptions.setAcceptInsecureCerts(true);\n\n        EdgeDriver edgeDriver = new EdgeDriver(edgeOptions);\n        edgeDriver.get("https://www.google.com");\n\n    }\n}\n\n')])])]),t("p",[e._v("FirefoxDriver(Capabilities) 被替换为 FirefoxDriver(FirefoxOptions).")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('\nimport org.openqa.selenium.firefox.FirefoxDriver;\nimport org.openqa.selenium.firefox.FirefoxOptions;\n\npublic class FirefoxExample {\n\n    final static String PROJECT_PATH = System.getProperty("user.dir");\n\n    public static void main(String[] args) throws IOException {\n\n        System.setProperty("webdriver.gecko.driver", PROJECT_PATH+ "/src/main/resources/geckodriver");\n\n        FirefoxOptions options = new FirefoxOptions();\n        options.setAcceptInsecureCerts(true);\n\n        FirefoxDriver driver = new FirefoxDriver(options);\n        driver.get("https://www.google.com");\n    }\n}\n')])])]),t("p",[e._v("InternetExplorerDriver(Capabilities) 被替换为 InternetExplorerDriver(InternetExplorerOptions).")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('import org.openqa.selenium.ie.InternetExplorerDriver;\nimport org.openqa.selenium.ie.InternetExplorerOptions;\n\npublic class InternetExplorerDriverExample {\n\n    final static String PROJECT_PATH = System.getProperty("user.dir");\n\n    public static void main(String[] args) throws IOException {\n\n        System.setProperty("webdriver.ie.driver", PROJECT_PATH+ "/src/main/resources/IEDriverServer.exe");\n\n        InternetExplorerOptions ops = new InternetExplorerOptions();\n        ops.setAcceptInsecureCerts(true);\n\n        InternetExplorerDriver ie = new InternetExplorerDriver(ops);\n        ie.get("https://www.gmail.com");\n    }\n}\n')])])]),t("h2",{attrs:{id:"摘要"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#摘要","aria-hidden":"true"}},[e._v("#")]),e._v(" 摘要")]),e._v(" "),t("p",[e._v("我们经历了Selenium 4中的主要弃用方法，并概述了对于最终用户从Selenium 3迁移到4至关重要的那些。")]),e._v(" "),t("p",[e._v("可以在Selenium WebDriver API文档中浏览所有不推荐使用的列表。 不推荐使用大量内部接口，类和ENUM，这些接口，类和ENUM对最终用户没有影响，但对于构​​建在Selenium之上的工具和产品的供应商来说可能很重要。")]),e._v(" "),t("p",[e._v("在本系列的下一篇文章中，我们将探讨Selenium 4中新增的功能以及它们提供的好处。")]),e._v(" "),t("h3",{attrs:{id:"author"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#author","aria-hidden":"true"}},[e._v("#")]),e._v(" author")]),e._v(" "),t("p",[e._v("石头 磊哥 seven 随便叫")]),e._v(" "),t("h3",{attrs:{id:"company"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#company","aria-hidden":"true"}},[e._v("#")]),e._v(" company")]),e._v(" "),t("p",[e._v("thoughtworks")]),e._v(" "),t("p",[e._v("大家好，本人不才，目前依旧混迹于thoughtworks，做着一名看起来像全栈的QA，兴趣爱好前端，目前是thoughtworks 西安QA社区的leader，如果有兴趣分享话题，或者想加入tw，可以找我")]),e._v(" "),t("h3",{attrs:{id:"roles"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#roles","aria-hidden":"true"}},[e._v("#")]),e._v(" roles")]),e._v(" "),t("p",[e._v("QA（营生） dev（front-end dev 兴趣爱好）")]),e._v(" "),t("h3",{attrs:{id:"联系方式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#联系方式","aria-hidden":"true"}},[e._v("#")]),e._v(" 联系方式")]),e._v(" "),t("p",[e._v("如果想转载或者高薪挖我 请直接联系我 哈哈")]),e._v(" "),t("h4",{attrs:{id:"wechat"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#wechat","aria-hidden":"true"}},[e._v("#")]),e._v(" wechat:")]),e._v(" "),t("p",[e._v("qileiwangnan")]),e._v(" "),t("h4",{attrs:{id:"email"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#email","aria-hidden":"true"}},[e._v("#")]),e._v(" email:")]),e._v(" "),t("p",[e._v("qileilove@gmail.com")])])}],!1,null,null,null);n.default=r.exports}}]);