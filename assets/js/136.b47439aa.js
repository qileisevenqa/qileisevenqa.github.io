(window.webpackJsonp=window.webpackJsonp||[]).push([[136],{349:function(e,v,t){"use strict";t.r(v);var n=t(1),_=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var e=this,v=e.$createElement,t=e._self._c||v;return t("div",{staticClass:"content"},[t("hr"),e._v(" "),t("p",[e._v('view: post\nlayout: post                          # Only in unique we use the "layout: post"\nlang: zh                              # Lang is required\nauthor:\ntitle: Selenium‌ ‌C#‌:‌ Page‌ ‌Object‌ ‌Model‌ Tutorial With‌ ‌Examples‌\ndescription:\nexcerpt:\ncover: true\ncoverAlt: /home.jpg\ndemo:\ncategories:')]),e._v(" "),t("ul",[t("li",[e._v("automation test\ntags:")]),e._v(" "),t("li",[e._v("Agile_QA")]),e._v(" "),t("li",[e._v("Agile testing")]),e._v(" "),t("li",[e._v("QA")]),e._v(" "),t("li",[e._v("automation test\ncreated_at: 2019-10-08 09:00\nupdated_at: 2019-10-08 09:00\nmeta:\n# If you have cover image")]),e._v(" "),t("li",[e._v("property: og:image\ncontent: /autores/my.jpeg")]),e._v(" "),t("li",[e._v("name: twitter:image\ncontent: /autores/my.jpeg")])]),e._v(" "),t("hr"),e._v(" "),t("hr"),e._v(" "),t("p",[e._v('view: post\nlayout: post                          # Only in unique we use the "layout: post"\nlang: zh                              # Lang is required\nauthor:\ntitle: 测试自动化之路--selenium2\ndescription:\nexcerpt:\ncover: true\ncoverAlt: /home.jpg\ndemo:\ncategories:')]),e._v(" "),t("ul",[t("li",[e._v("Agile QA\ntags:")]),e._v(" "),t("li",[e._v("Agile_QA")]),e._v(" "),t("li",[e._v("Agile testing")]),e._v(" "),t("li",[e._v("QA\ncreated_at: 2020-3-06 09:00\nupdated_at: 2020-3-06 09:00\nmeta:\n# If you have cover image")]),e._v(" "),t("li",[e._v("property: og:image\ncontent: /autores/my.jpeg")]),e._v(" "),t("li",[e._v("name: twitter:image\ncontent: /autores/my.jpeg")])]),e._v(" "),t("hr"),e._v(" "),t("h1",{attrs:{id:"测试自动化之路-selenium1"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#测试自动化之路-selenium1","aria-hidden":"true"}},[e._v("#")]),e._v(" 测试自动化之路--selenium1")]),e._v(" "),t("p",[e._v("快速导览")]),e._v(" "),t("p",[e._v("Selenium不仅是一种工具或API，而且还包含许多工具。")]),e._v(" "),t("p",[e._v("网络驱动器")]),e._v(" "),t("p",[e._v("如果您是从桌面网站或移动网站测试自动化开始的，那么您将使用WebDriver API。 WebDriver使用浏览器供应商提供的浏览器自动化API来控制浏览器并运行测试。 就像真实用户正在操作浏览器一样。 由于WebDriver不需要使用应用程序代码编译其API，因此它不是侵入式的。 因此，您正在测试实时发布的同一应用程序。")]),e._v(" "),t("p",[e._v("集成开发环境")]),e._v(" "),t("p",[e._v("IDE（集成开发环境）是用于开发Selenium测试用例的工具。 它是易于使用的Chrome和Firefox扩展程序，通常是开发测试用例的最有效方法。 它使用现有的Selenium命令，通过该元素的上下文定义的参数，在浏览器中为您记录用户的操作。 这不仅节省时间，而且还是学习Selenium脚本语法的绝佳方法。")]),e._v(" "),t("p",[e._v("格网")]),e._v(" "),t("p",[e._v("开发WebDriver测试后不久，您可能需要在多个浏览器和操作系统组合上运行测试。 这就是Grid使用的地方。")]),e._v(" "),t("p",[e._v("Selenium是一系列工具和库的总括项目，这些工具和库支持web浏览器的自动化。")]),e._v(" "),t("p",[e._v("selenium项目和工具")]),e._v(" "),t("p",[e._v("Selenium控制web浏览器")]),e._v(" "),t("p",[e._v("Selenium有很多东西，但从本质上讲，它是用于Web浏览器自动化的工具集，它使用可用的最佳技术来远程控制浏览器实例并模拟用户与浏览器的交互。")]),e._v(" "),t("p",[e._v("它允许用户模拟最终用户执行的常见活动； 在字段中输入文本，选择下拉值和复选框，然后单击文档中的链接。 它还提供许多其他控件，例如鼠标移动，任意JavaScript执行等等。")]),e._v(" "),t("p",[e._v("尽管Selenium主要用于网站的前端测试，但其核心是浏览器用户代理库。 接口在其应用程序中无处不在，因此鼓励与其他库组合以适合您的目的。")]),e._v(" "),t("p",[e._v("一个界面来统治所有人")]),e._v(" "),t("p",[e._v("该项目的指导原则之一是支持所有（主要）浏览器技术的通用接口。 Web浏览器是极其复杂的，高度工程化的应用程序，它们以完全不同的方式执行其操作，但是这样做时的外观通常相同。 即使文本以相同的字体呈现，图像也会显示在相同的位置，并且链接会将您带到相同的目的地。 底层发生的事情与白天和黑夜一样不同。 selenium“抽象”了这些差异，向编写代码的人隐藏了它们的细节和复杂性。 这使您可以编写几行代码来执行复杂的工作流，但是这些相同的行将在Firefox，Internet Explorer，Chrome和所有其他受支持的浏览器上执行。")]),e._v(" "),t("p",[e._v("工具和支持")]),e._v(" "),t("p",[e._v("Selenium的极简设计方法使其具有多功能性，可作为大型应用程序的组成部分。 Selenium伞下提供的周围基础架构为您提供了将浏览器网格组合在一起的工具，因此可以在不同的浏览器和跨多种机器的多个操作系统上运行测试。")]),e._v(" "),t("p",[e._v("想象一下，您的服务器机房或数据中心中的一排计算机同时启动了浏览器，并点击了网站的链接，表单和表格，从而一天24小时测试您的应用程序。 通过为大多数通用语言提供的简单编程界面，这些测试将不知疲倦地并行运行，并在发生错误时向您报告。")]),e._v(" "),t("p",[e._v("目的是通过向用户提供工具和文档来不仅控制浏览器，而且使扩展和部署此类网格变得容易，从而帮助您实现这一目标。")]),e._v(" "),t("p",[e._v("谁使用selenium")]),e._v(" "),t("p",[e._v("世界上许多最重要的公司都采用Selenium进行基于浏览器的测试，通常取代了长达数年的，涉及其他专有工具的工作。 随着它的普及，它的要求和挑战也成倍增加。")]),e._v(" "),t("p",[e._v("随着网络变得越来越复杂，以及网站中增加了新技术，该项目的任务是尽可能与时俱进。 作为一个开源项目，这种支持是通过许多志愿者慷慨捐赠的时间来提供的，其中每个志愿者都有一份“日常工作”。")]),e._v(" "),t("p",[e._v("该项目的另一个任务是鼓励更多的志愿者参与这项工作，并建立一个强大的社区，以便该项目可以继续跟上新兴技术并保持功能测试自动化的主导平台。")]),e._v(" "),t("p",[e._v("历史")]),e._v(" "),t("p",[e._v("当Selenium 1在2004年发布时，没有必要减少在Web应用程序前端手动验证一致行为所花费的时间。 它利用当时可用的工具，并在很大程度上依赖于将JavaScript注入被测网页来模拟用户的互动。")]),e._v(" "),t("p",[e._v("JavaScript是一个很好的工具，可以让您自省DOM的属性并进行某些客户端观察，而这些观察是您无法做到的，但JavaScript却无法像鼠标和鼠标那样自然地复制用户的交互。 正在使用键盘。")]),e._v(" "),t("p",[e._v("从那时起，Selenium已经发展壮大，已经成为一种工具，被世界上许多（如果不是大多数）最大的组织广泛使用。 Selenium已从Thoughtworks开发的，针对特定人群和特定用例的自制测试自动化工具包，发展成为全球事实上的浏览器自动化库。")]),e._v(" "),t("p",[e._v("正如Selenium RC当时利用当时可用的交易工具一样，Selenium WebDriver通过将浏览器交互部分带到浏览器供应商的家中并要求他们对后端，面向浏览器的实现负责，从而延续了这一传统。 最近，这项工作已经发展成为W3C标准化过程，其目标是将Selenium中的WebDriver组件转变为用户代理的du jour远程控制库。")])])}],!1,null,null,null);v.default=_.exports}}]);