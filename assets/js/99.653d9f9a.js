(window.webpackJsonp=window.webpackJsonp||[]).push([[99],{312:function(e,t,s){"use strict";s.r(t);var a=s(1),n=Object(a.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("div",{staticClass:"content"},[s("h1",{attrs:{id:"使用locust-in-python-介绍、关联变量和基本断言"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用locust-in-python-介绍、关联变量和基本断言","aria-hidden":"true"}},[e._v("#")]),e._v(" 使用locust in python:介绍、关联变量和基本断言")]),e._v(" "),s("p",[e._v("Locust 是一个很好的开源负载测试工具，可以为有 Python 经验的开发人员提供测试，因为测试可以作为代码创建。我们在之前的一些文章中已经讨论过这个问题。但是如果你从来没有用过它呢？在这篇文章中，我们将向你展示如何使用这个性能测试工具开始你的第一步，通过展示一个用 Python 开发的基本工作流程的例子，一个高级的工作流程，以及如何关联贵重物品和断言你的脚。")]),e._v(" "),s("h2",{attrs:{id:"开始-安装-python"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#开始-安装-python","aria-hidden":"true"}},[e._v("#")]),e._v(" 开始: 安装 Python")]),e._v(" "),s("p",[e._v("为了运行 Locust，你需要安装 Python。如果这不是你的情况，我们将留给你一个链接下载它在这里。然后，你所要做的就是运行以下命令:")]),e._v(" "),s("p",[e._v("pip3 install locust")]),e._v(" "),s("h2",{attrs:{id:"从-locust-gui-脚本和执行负载测试"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#从-locust-gui-脚本和执行负载测试","aria-hidden":"true"}},[e._v("#")]),e._v(" 从 Locust GUI 脚本和执行负载测试")]),e._v(" "),s("p",[e._v("下一步是为名为 locustfile.py 的脚本创建一个文件。在这个文件中，我们将定义在负载测试中执行的 HTTP 请求。使用该脚本的文件名使 Locust 能够自动找到该文件。(如果要为文件使用另一个名称，在执行时需要添加参数 -f 和文件名。我将在下面向你展示。")]),e._v(" "),s("p",[e._v("在这个例子中，我们将加载测试站点的 https://www.demoblaze.com/。")]),e._v(" "),s("h3",{attrs:{id:"创建一个基本脚本"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建一个基本脚本","aria-hidden":"true"}},[e._v("#")]),e._v(" 创建一个基本脚本")]),e._v(" "),s("p",[e._v("首先，我们将编写一个脚本，调用 demoblaze 主页，如下所示:")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('from locust import HttpUser, task\n            \nclass User(HttpUser):\n    @task\n    def mainPage(self):\n        self.client.get("/")\n\n')])])]),s("p",[e._v("注意，脚本中没有指定被测试站点的 url。相反，它是在运行测试时从 UI 指定的。\nLocust 将只在 decorator@任务中运行函数，因此我们必须记住添加它。对于定义了多个任务的情况，默认情况下它们将随机执行。")]),e._v(" "),s("h3",{attrs:{id:"running-the-script-2-运行脚本"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#running-the-script-2-运行脚本","aria-hidden":"true"}},[e._v("#")]),e._v(" Running the Script 2. 运行脚本")]),e._v(" "),s("p",[e._v("为了运行这个测试，我们需要从命令行执行脚本目录中的 locust 命令，这将启动端口8089上的 web 用户界面。只需在浏览器上导航到 http://localhost:8089地图就可以访问它。")]),e._v(" "),s("p",[e._v("注意: 如果您在另一个程序使用端口时得到一个错误，您可以使用 locust 命令 -- web-port [ port ]更改它。正如我上面提到的，如果您想运行一个不同名称的脚本，可以执行 locust-f [ file name ]。")]),e._v(" "),s("p",[e._v("用户的数量，每秒启动的用户数量和主机(测试中的 URL)可以从 Locust 的 web 用户界面中选择。Locust 将使用脚本中的路径和这里指定的主机为每个请求创建完整的 url。")]),e._v(" "),s("p",[s("img",{attrs:{src:"https://lh6.googleusercontent.com/3C_q1XK49SNSd2iJ5UhxoYJXWgFC8KL74gI3MA4bUqx9_pxPesM7zX_K3QgVzivG8GTkF6NdRewdO-soLcM8nuKCT_JPXTXaaoqe5-zszX-L4XI-ZExQKUqvsoGv2OAgct20acyX",alt:""}}),e._v("\n现在你可以通过点击 Start swarming 按钮来运行测试，浏览器会显示一个如下图所示的仪表盘:")]),e._v(" "),s("p",[s("img",{attrs:{src:"https://lh5.googleusercontent.com/517zhtWrs-ygVZYpRPD-RLrSqYulCWmDnQL6EcQwXETo2-k7ClyLUBxl1JiGzZ2BPI0dq3gpzZA1__jhdJ6wdzlqRNAMpGx1bLcmFawlUB8U9SIZxGRni9qjyBBZDCwjmHUhGiAc",alt:""}})]),e._v(" "),s("p",[e._v("在这个仪表板中，我们将看到一个报告，其中包括执行的请求数量、失败请求数量、90% 以及其他实时统计信息。默认情况下，虚拟用户将继续运行，直到测试停止。")]),e._v(" "),s("p",[e._v("如果你不想使用 web UI 来运行脚本，你可以运行以下命令:")]),e._v(" "),s("p",[e._v("locust --headless -u 1 -r 1 -H https://www.demoblaze.com")]),e._v(" "),s("p",[e._v("其中 -u 指定用户数,-r 表示产生率,-h 表示主机。")]),e._v(" "),s("h3",{attrs:{id:"创建更高级的脚本"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建更高级的脚本","aria-hidden":"true"}},[e._v("#")]),e._v(" 创建更高级的脚本")]),e._v(" "),s("p",[e._v("现在我们了解了如何创建和运行基本测试，接下来让我们用更复杂的工作流来做一个测试。")]),e._v(" "),s("p",[e._v("这个工作流程包括4个步骤:")]),e._v(" "),s("p",[e._v("进入网站\n登录\n向购物车中添加产品\n提交购物车")]),e._v(" "),s("p",[e._v("一旦我们获得了工作流中每个步骤的 HTTP 请求，我们就可以为每个用户操作创建一个方法。")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('from locust import HttpUser, SequentialTaskSet, task, between\n            \nclass User(HttpUser):    \n    @task\n    class SequenceOfTasks(SequentialTaskSet):\n        wait_time = between(1, 5)\n        @task\n        def mainPage(self):\n            self.client.get("/")\n            self.client.get("https://api.demoblaze.com/entries")\n        @task\n        def login(self):\n            self.client.options("https://api.demoblaze.com/login")\n            self.client.post("https://api.demoblaze.com/login",json={"username":"aaaa","password":"YWFhYQ=="})\n            self.client.options("https://api.demoblaze.com/check")\n            self.client.get("https://api.demoblaze.com/entries")\n            self.client.post("https://api.demoblaze.com/check",json={"token":"YWFhYTE2MzA5NDU="})            \n        @task\n        def clickProduct(self):\n            self.client.get("/prod.html?idp_=1")\n            self.client.options("https://api.demoblaze.com/check")\n            self.client.options("https://api.demoblaze.com/view")\n            self.client.post("https://api.demoblaze.com/check",json={"token":"YWFhYTE2MzA5NDU="})\n            self.client.post("https://api.demoblaze.com/view",json={"id":"1"})\n        @task\n        def addToCart(self):\n            self.client.options("https://api.demoblaze.com/addtocart")\n            self.client.post("https://api.demoblaze.com/addtocart",json={"id":"fb3d5d23-f88c-80d9-a8de-32f1b6034bfd","cookie":"YWFhYTE2MzA5NDU=","prod_id":1,"flag":\'true\'})\n        @task \n        def viewCart(self):\n            self.client.get("/cart.html")\n            self.client.options("https://api.demoblaze.com/check")\n            self.client.options("https://api.demoblaze.com/viewcart")\n            self.client.post("https://api.demoblaze.com/check",json={"token":"YWFhYTE2MzA5NDU="})\n            self.client.post("https://api.demoblaze.com/viewcart",json={"cookie":"YWFhYTE2MzA5NDU=","flag":\'true\'})\n            self.client.options("https://api.demoblaze.com/view")\n            self.client.post("https://api.demoblaze.com/check",json={"token":"YWFhYTE2MzA5NDU="})\n            self.client.post("https://api.demoblaze.com/view",json={"id":"1"})\n\n')])])]),s("p",[e._v("正如您所看到的，所有方法都使用 SequentialTaskSet 包含在类中，因此它们可以按照声明的相同顺序执行。")]),e._v(" "),s("p",[e._v("另外，通过使用 wait _ time，我们可以在任务之间添加一个暂停。在这种情况下，是1到5秒之间的随机停顿。")]),e._v(" "),s("p",[e._v("您还会注意到，对 API 的请求是使用完整的 URL 编写的，因为 Locust web 用户界面只允许在 host 字段中使用一个 URL。")]),e._v(" "),s("h3",{attrs:{id:"相关变量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#相关变量","aria-hidden":"true"}},[e._v("#")]),e._v(" 相关变量")]),e._v(" "),s("p",[e._v("下一步是将硬编码令牌关联起来。关联动态的参数非常重要，我们知道这个标记在用户每次登录时都会发生变化。令牌可能过期，如果没有将其参数化，脚本就会停止工作。")]),e._v(" "),s("p",[e._v("通过分析 HTTP 请求工作流，我们可以看到可以从/login 响应中提取/check post 中发送的令牌。然后，我们可以将它保存到一个变量中，并在以下所有需要它的请求中使用它。")]),e._v(" "),s("p",[e._v("响应的标记格式如下:")]),e._v(" "),s("p",[e._v('"Auth_token: YWFhYTE2MzA1ODg="\n因此可以使用下面的正则表达式来提取它:')]),e._v(" "),s("p",[e._v('"Auth_token: (.+?)"\n接下来，需要导入模块 re，并使用 match 方法将提取的值保存到变量中。')]),e._v(" "),s("p",[e._v("因此，为了从响应中提取标记，我们首先保存对变量的响应，如下所示:")]),e._v(" "),s("p",[e._v('response = self.client.post("https://api.demoblaze.com/login",json={"username":"aaaa","password":"YWFhYQ=="})'),s("br"),e._v("\n现在我们可以定义一个全局变量并使用正则表达式提取标记。")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('global token \n  token = re.match("\\"Auth_token: (.+?)\\"",response.text)[1]\n')])])]),s("p",[e._v("我们可以在以下请求中使用该变量")]),e._v(" "),s("p",[e._v('self.client.post("https://api.demoblaze.com/check",json={"token":token}\n这就是登录和点击产品交易的样子:')]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('@task\n        def login(self):\n            self.client.options("https://api.demoblaze.com/login")\n            response = self.client.post("https://api.demoblaze.com/login",json={"username":"aaaa","password":"YWFhYQ=="})\n            global token \n            token = re.match("\\"Auth_token: (.+?)\\"",response.text)[1]\n            self.client.options("https://api.demoblaze.com/check")\n            self.client.get("https://api.demoblaze.com/entries")\n            self.client.post("https://api.demoblaze.com/check",json={"token":token})            \n        @task\n        def clickProduct(self):\n            self.client.get("/prod.html?idp_=1")\n            self.client.options("https://api.demoblaze.com/check")\n            self.client.options("https://api.demoblaze.com/view")\n            self.client.post("https://api.demoblaze.com/check",json={"token":token})\n            self.client.post("https://api.demoblaze.com/view",json={"id":"1"})\n')])])]),s("p",[e._v("注意: 在这个例子中，我们只使用了一个用户。如果你想学习如何在多个用户中运行脚本，你可以查看这篇文章。")]),e._v(" "),s("p",[e._v("https://www.blazemeter.com/blog/how-to-run-locust-with-different-users")]),e._v(" "),s("h3",{attrs:{id:"使用断言"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用断言","aria-hidden":"true"}},[e._v("#")]),e._v(" 使用断言")]),e._v(" "),s("p",[e._v("现在，我将向您展示如何添加一个简单的断言来验证添加到购物车中的产品是否被正确添加。")]),e._v(" "),s("p",[e._v("Locust 没有很多内置功能，但是使用 Python 可以轻松地添加自定义功能。")]),e._v(" "),s("p",[e._v("Failure (“ Error message”)可用于将请求标记为 failed。为了让断言正常工作，这个函数应该在 if 子句中使用，并且应该添加 catch _ response 参数来验证响应，如下所示。")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('@task \n        def viewCart(self):\n            self.client.get("/cart.html")\n            self.client.options("https://api.demoblaze.com/check")\n            self.client.options("https://api.demoblaze.com/viewcart")\n            self.client.post("https://api.demoblaze.com/check",json={"token":token})\n            with self.client.post("https://api.demoblaze.com/viewcart",catch_response=True,json={"cookie":token,"flag":\'true\'}) as response:\n                if \'"prod_id":1\' not in response.text:\n                    response.failure("Assert failure, response does not contain expected prod_id")\n            self.client.options("https://api.demoblaze.com/view")\n            self.client.post("https://api.demoblaze.com/check",json={"token":token})\n            self.client.post("https://api.demoblaze.com/view",json={"id":"1"})\n            \n')])])]),s("p",[e._v("如果我们运行测试，我们可以看到它没有错误。但是，我们如何知道这种主张是否有效呢？让我们将产品 id 更改为响应中不存在的 id。")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('with self.client.post("https://api.demoblaze.com/viewcart",catch_response=True,json={"cookie":token,"flag":\'true\'}) as response:\n                if \'"prod_id":1234\' not in response.text:\n                    response.failure("Assert failure, response does not contain expected prod_id")\n')])])]),s("p",[e._v("当再次执行测试时,/viewcart POST 将失败，并且定义的错误消息可以在 Failures 选项卡中看到。")]),e._v(" "),s("p",[s("img",{attrs:{src:"https://lh3.googleusercontent.com/AtBXDZPI6KkPtLREktViG22DC1xfj3reLvGUrO_KpEbJi4QOXVRTLwNWC4BNOO4_VDGFAGFrvhPQxNZ_fpLXhR3RlIuBb0ZkOy4iHSuGknf_zG3_fmB-GigSX6KHeKXqsSxANvQN",alt:""}})]),e._v(" "),s("p",[s("img",{attrs:{src:"https://lh3.googleusercontent.com/VKM3V3gWA0pNh5qPbCm-6QXnuW37geWbPAxlJR2BgHH_P5_wkeaTeh0cnN_frc1kTb0h2HXz_C0Mvm_FKgNkiufHKlNxZx_7IN3oWX4iK0y_E_CfqfgKK4UemJloJFgr1ZTumAmb",alt:""}})]),e._v(" "),s("p",[e._v("如果你要使用多个断言，最好创建一个函数，避免重写类似的代码，比如这个:")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('def assertContains(response,text):\n    with response as r:\n        if text not in r.text:\n            r.failure("Expected "+ response.text + " to contain "+ text)\n\n')])])]),s("p",[e._v("你可以像下面这样调用它，每次你想用文本做一个断言:")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('            assertContains(self.client.post("https://api.demoblaze.com/viewcart",catch_response=True,json={"cookie":token,"flag":\'true\'}),\'"prod_id":1\')\n')])])]),s("p",[e._v("一旦你完成locust脚本，你可以运行它在 BlazeMeter 的规模，集成在 CI/CD 和看到先进的报告。现在就开始。")]),e._v(" "),s("h3",{attrs:{id:"author"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#author","aria-hidden":"true"}},[e._v("#")]),e._v(" author")]),e._v(" "),s("p",[e._v("石头 磊哥 seven 随便叫")]),e._v(" "),s("h3",{attrs:{id:"company"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#company","aria-hidden":"true"}},[e._v("#")]),e._v(" company")]),e._v(" "),s("p",[e._v("HSBC\n大家好，我已经加入了HSBC")]),e._v(" "),s("h3",{attrs:{id:"roles"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#roles","aria-hidden":"true"}},[e._v("#")]),e._v(" roles")]),e._v(" "),s("p",[e._v("QA（营生） dev（front-end dev 兴趣爱好）")]),e._v(" "),s("h3",{attrs:{id:"联系方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#联系方式","aria-hidden":"true"}},[e._v("#")]),e._v(" 联系方式")]),e._v(" "),s("p",[e._v("如果想转载或者高薪挖我 请直接联系我 哈哈")]),e._v(" "),s("h4",{attrs:{id:"wechat"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#wechat","aria-hidden":"true"}},[e._v("#")]),e._v(" wechat:")]),e._v(" "),s("p",[e._v("qileiwangnan")]),e._v(" "),s("h4",{attrs:{id:"email"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#email","aria-hidden":"true"}},[e._v("#")]),e._v(" email:")]),e._v(" "),s("p",[e._v("qileilove@gmail.com")])])}],!1,null,null,null);t.default=n.exports}}]);